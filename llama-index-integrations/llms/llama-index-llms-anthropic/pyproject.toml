[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "ipython==8.10.0",
    "jupyter>=1.0.0,<2",
    "mypy==0.991",
    "pre-commit==3.2.0",
    "pylint==2.15.10",
    "pytest==7.2.1",
    "pytest-asyncio>=0.23.5,<0.24",
    "pytest-mock==3.11.1",
    "ruff==0.0.292",
    "types-Deprecated>=0.1.0",
    "types-PyYAML>=6.0.12.12,<7",
    "types-protobuf>=4.24.0.4,<5",
    "types-redis==4.5.5.0",
    "types-requests==2.28.11.8",
    "types-setuptools==67.1.0.0",
    "black[jupyter]<=23.9.1,>=23.7.0",
    "codespell[toml]>=v2.2.6",
    "pytest-cov>=6.1.1",
    "diff-cover>=9.2.0",
]

[project]
name = "llama-index-llms-anthropic"
version = "0.6.10"
description = "llama-index llms anthropic integration"
authors = [{name = "Your Name", email = "you@example.com"}]
requires-python = ">=3.9,<4.0"
readme = "README.md"
license = "MIT"
dependencies = [
    "anthropic[bedrock, vertex]>=0.49.0",
    "llama-index-core>=0.12.5,<0.13",
]

[tool.codespell]
check-filenames = true
check-hidden = true
skip = "*.csv,*.html,*.json,*.jsonl,*.pdf,*.txt,*.ipynb"

[tool.hatch.build.targets.sdist]
include = ["llama_index/"]
exclude = ["**/BUILD"]

[tool.hatch.build.targets.wheel]
include = ["llama_index/"]
exclude = ["**/BUILD"]

[tool.llamahub]
contains_example = false
import_path = "llama_index.llms.anthropic"

[tool.llamahub.class_authors]
Anthropic = "llama-index"

[tool.mypy]
disallow_untyped_defs = true
exclude = ["_static", "build", "examples", "notebooks", "venv"]
ignore_missing_imports = true
python_version = "3.9"

[tool.pytest.ini_options]
asyncio_mode = "auto"
