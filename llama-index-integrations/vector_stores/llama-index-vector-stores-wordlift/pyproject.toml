[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black[jupyter]<=23.9.1,>=23.7.0",
    "codespell[toml]>=v2.2.6",
    "ipython==8.10.0",
    "jupyter>=1.0.0,<2",
    "mypy==0.991",
    "pre-commit==3.2.0",
    "pylint==2.15.10",
    "pytest==7.2.1",
    "pytest-asyncio==0.21.0",
    "pytest-mock==3.11.1",
    "requests>=2.31.0,<2.32.0",
    "ruff==0.0.292",
    "tree-sitter-languages>=1.8.0,<2",
    "types-Deprecated>=0.1.0",
    "types-PyYAML>=6.0.12.12,<7",
    "types-protobuf>=4.24.0.4,<5",
    "types-redis==4.5.5.0",
    "types-requests==2.28.11.8",
    "types-setuptools==67.1.0.0",
    "wordlift-client>=1.30.0,<2",
]

[project]
name = "llama-index-vector-stores-wordlift"
version = "0.5.0"
description = "llama-index vector_stores wordlift integration"
authors = [{name = "Your Name", email = "you@example.com"}]
requires-python = ">=3.9,<4.0"
readme = "README.md"
license = "MIT"
dependencies = [
    "pydantic>=2.0,<3.0",
    "aiohttp>=3.7.4",
    "python-dateutil>=2.8.2",
    "aiohttp-retry>=1.2",
    "urllib3>=1.21.1,<3",
    "wordlift-client>=1.46.0,<2",
    "docker>=7.1.0,<8",
    "llama-index-core>=0.12.0,<0.13",
]

[tool.codespell]
check-filenames = true
check-hidden = true
skip = "*.csv,*.html,*.json,*.jsonl,*.pdf,*.txt,*.ipynb"

[tool.hatch.build.targets.sdist]
include = ["llama_index/"]

[tool.hatch.build.targets.wheel]
include = ["llama_index/"]

[tool.llamahub]
contains_example = true
import_path = "llama_index.vector_stores.wordlift"

[tool.llamahub.class_authors]
WordliftVectorStore = "ziodave"

[tool.mypy]
disallow_untyped_defs = true
exclude = ["_static", "build", "examples", "notebooks", "venv"]
ignore_missing_imports = true
python_version = "3.8"
