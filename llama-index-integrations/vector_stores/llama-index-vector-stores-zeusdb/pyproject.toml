[build-system]
requires = ["hatchling>=1.18"]
build-backend = "hatchling.build"

[project]
name = "llama-index-vector-stores-zeusdb"
version = "0.1.5"
description = "LlamaIndex integration for ZeusDB vector database. Enterprise-grade RAG with high-performance vector search."
readme = "README.md"
requires-python = ">=3.10,<4.0"
license = { text = "MIT" }
authors = [{ name = "ZeusDB", email = "contact@zeusdb.com" }]
keywords = [
    "vector-database",
    "embeddings",
    "semantic-search",
    "rag",
    "llama-index",
    "zeusdb",
    "hnsw",
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
# Runtime dependencies
dependencies = [
    "llama-index-core>=0.14.6",  # Latest release as of Oct 26, 2025
    "zeusdb>=0.0.8",  # Megapackage version
]

[project.optional-dependencies]
# Install with: uv pip install -e ".[dev]"
dev = [
    "pytest>=8.4",
    "pytest-asyncio>=1.2.0",
    "pytest-mock>=3.15",
    "ruff>=0.12",
    "black>=25.9",
    "mypy>=1.17",
    "pre-commit>=4.3",
    "codespell[toml]>=2.2.6",
    # "ipython>=9.5",
    "ipython>=8.10.0", #need support for python 3.10
    "jupyter>=1.0.0",
    "pylint>=3.3", # Latest
    # "tree-sitter-languages>=1.10.2", # Not compatible with 3.13
    "types-requests>=2.32", # Latest KEEP
    # "types-setuptools>=80.9", # Latest
    "llama-index-embeddings-openai>=0.5.1",
    "llama-index-llms-openai>=0.6.6",
    "python-dotenv>=1.1.1",  # For examples and environment variable loading
]

[project.urls]
Homepage = "https://github.com/zeusdb/llama-index-vector-stores-zeusdb"
Repository = "https://github.com/zeusdb/llama-index-vector-stores-zeusdb"
Issues = "https://github.com/zeusdb/llama-index-vector-stores-zeusdb/issues"

# --- LlamaHub metadata (REQUIRED for the PR) ---
[tool.llamahub]
contains_example = true
import_path = "llama_index.vector_stores.zeusdb"

[tool.llamahub.class_authors]
ZeusDBVectorStore = "zeusdb"
# ----------------------------------------------------------

[tool.codespell]
check-filenames = true
check-hidden = true
skip = "*.csv,*.html,*.json,*.jsonl,*.pdf,*.txt,*.ipynb"

[tool.mypy]
disallow_untyped_defs = true
exclude = ["_static", "build", "examples", "notebooks", "venv", ".venv"]
ignore_missing_imports = true
python_version = "3.10"

[tool.hatch.build.targets.wheel]
packages = ["llama_index"]
include = ["llama_index/vector_stores/zeusdb/py.typed"]

[tool.hatch.build.targets.sdist]
include = [
    "llama_index",
    "README.md",
    "LICENSE",
    "pyproject.toml",
    "llama_index/vector_stores/zeusdb/py.typed",
]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "F",     # pyflakes
    "I",     # isort
    "UP",    # pyupgrade
]
ignore = []

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.ruff.lint.isort]
known-first-party = ["llama_index"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
force-sort-within-sections = true
