name: Publish llama-index to PyPI / GitHub

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:

env:
  PYTHON_VERSION: "3.9"

jobs:
  build-n-publish:
    name: Build and publish to PyPI
    if: github.repository == 'run-llama/llama_index'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install deps
        shell: bash
        run: uv sync

      - name: Build and publish to pypi
        run: uv build && uv publish --token ${{ secrets.LLAMA_INDEX_PYPI_TOKEN }}

      - name: Generate Release Notes
        uses: CSchoel/release-notes-from-changelog@v1
        with:
          version: "$(date +'%Y-%m-%d')"
          begin-pattern: "/^## \\[$(date +'%Y-%m-%d')\\]/"
          end-pattern: "/^## \\[/"
          working-directory: "."

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: "RELEASE.md"
          draft: false
          prerelease: false

      - name: Get Asset name
        run: |
          export PKG=$(ls dist/ | grep tar)
          set -- $PKG
          echo "name=$1" >> $GITHUB_ENV

      - name: Upload Release Asset (sdist) to GitHub
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ env.name }}
          asset_name: ${{ env.name }}
          asset_content_type: application/zip
